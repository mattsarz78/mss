generator client {
  provider = "prisma-client-js"
  output   = "../__generated__/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model football {
  id             BigInt    @id @default(autoincrement())
  season         String?
  gametitle      String?
  visitingteam   String?
  hometeam       String?
  location       String?
  network        String?
  networkjpg     String?
  coveragenotes  String?
  ppv            String?
  time           DateTime? @default(dbgenerated("'9999-12-31 00:00:00'::timestamp without time zone")) @db.Timestamp(6)
  week           Int?      @db.SmallInt
  listorder      Int?      @db.SmallInt
  mediaindicator String?   @default("N")
  conference     String?
  fcs            String?
  tvtype         String?
  timewithoffset DateTime? @default(dbgenerated("'9999-12-31 00:00:00+00'::timestamp with time zone")) @db.Timestamp(6)

  @@index([conference], map: "idx_fb_conference")
  @@index([mediaindicator, timewithoffset], map: "idx_fb_mi_timeoffset")
  @@index([season, week], map: "idx_fb_season_week")
  @@index([hometeam, visitingteam], map: "idx_football_teams")
}

model basketball {
  id             BigInt    @id @default(autoincrement())
  season         String?
  gametitle      String?
  visitingteam   String?
  hometeam       String?
  location       String?
  network        String?
  networkjpg     String?
  coveragenotes  String?
  ppv            String?
  time           DateTime? @default(dbgenerated("'9999-12-31 00:00:00'::timestamp without time zone")) @db.Timestamp(6)
  week           Int?      @db.SmallInt
  listorder      Int?      @db.SmallInt
  mediaindicator String?   @default("N")
  conference     String?
  fcs            String?
  tvtype         String?
  timewithoffset DateTime? @default(dbgenerated("'9999-12-31 00:00:00+00'::timestamp with time zone")) @db.Timestamp(6)

  @@index([conference], map: "idx_mbb_conference")
  @@index([mediaindicator, timewithoffset], map: "idx_mbb_mi_timeoffset")
  @@index([season, week], map: "idx_mbb_season_week")
  @@index([hometeam, visitingteam], map: "idx_basketball_teams")
}

model availabletv {
  season     String
  conference String
  week       Int     @db.SmallInt
  tvoptions  String?

  @@id([season, conference, week])
}

model rsnlist {
  id           BigInt  @id
  season       String?
  gametitle    String?
  visitingteam String?
  hometeam     String?
  location     String?
  keyvalue     String?
}

model weeklydates {
  season        String
  week          Int       @db.SmallInt
  startdate     DateTime? @db.Timestamp(6)
  enddate       DateTime? @db.Timestamp(6)
  postseasonind String?

  @@id([season, week])
  @@index([season], map: "idx_wkly_dates_season")
}
